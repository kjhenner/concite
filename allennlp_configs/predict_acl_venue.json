{
  "dataset_reader": {
    "type": "aclarc_dataset_reader",
    "workshop_path": "/shared-1/projects/concite/data/workshop-alignments.tsv",
    "venues": "workshops",
    "token_indexers": {
      "bert": {
        "type": "bert-pretrained",
        "pretrained_model": std.extVar("BERT_VOCAB"),
        "do_lowercase": true,
        "use_starting_offsets": true
      }
    }
  },
  "train_data_path": "/shared-1/projects/concite/data/train_acl_n2v.jsonl",
  "validation_data_path": "/shared-1/projects/concite/data/dev_acl_n2v.jsonl",
  "test_data_path": "/shared-1/projects/concite/data/test_acl_n2v.jsonl",
  "evaluate_on_test": false,
  "model": {
    "type": "venue_classifier",
    "verbose_metrics": true,
    "use_node_vector": true,
    "use_abstract": false,
    "dropout": 0.2,
    "classifier_feedforward": {
      "input_dim": std.parseInt(std.extVar("INPUT_DIM")),
      "num_layers": 2,
      "hidden_dims": [200, 10],
      "activations": ["relu", "linear"],
      "dropout": [0.2, 0.0]
    },
    "node_embedder": {
      "type": "embedding",
      "embedding_dim": std.parseInt(std.extVar("EMBEDDING_DIM")),
      "pretrained_file": std.extVar("PRETRAINED_FILE"),
      "vocab_namespace": "paper_id_labels"
    },
    "text_field_embedder": {
      "allow_unmatched_keys": true,
      "embedder_to_indexer_map": {
        "bert": ["bert", "bert-offsets"]
      },
      "token_embedders": {
        "bert": {
          "type": "bert-pretrained",
          "pretrained_model": std.extVar("BERT_WEIGHTS"),
          "requires_grad": "11",
          "top_layer_only": true
        }
      }
    }
  },
  "iterator": {
    "type": "bucket",
    "sorting_keys": [["abstract", "num_tokens"]],
    "batch_size": 16,
    "cache_instances": true
  },
  "trainer": {
    "num_epochs": 80,
    "grad_clipping": 5.0,
    "patience": 10,
    "validation_metric": "+average_F1",
    "cuda_device": 7,
    "optimizer": {
      "type": "bert_adam",
      "lr": 1e-5,
      "t_total": -1,
      "max_grad_norm": 1.0,
      "weight_decay": 0.01,
      "parameter_groups": [
        [["bias", "LayerNorm.bias", "LayerNorm.weight", "layer_norm.weight"], {"weight_decay": 0.0}]
      ]
    },
    "should_log_learning_rate": true
  }
}

